commit 07c96988b65becae0141d71d40481bcf916bee68
Author: Stefan Saraev <stefan@saraev.ca>
Date:   Sun Dec 18 11:30:39 2016 -0800

    use a wrapper to setup systemd services

diff --git a/xbmc/addons/Addon.cpp b/xbmc/addons/Addon.cpp
index 8f62079..a54682a 100644
--- a/xbmc/addons/Addon.cpp
+++ b/xbmc/addons/Addon.cpp
@@ -348,6 +348,13 @@ AddonVersion CAddon::GetDependencyVersion(const std::string &dependencyID) const
   return AddonVersion("0.0.0");
 }
 
+void CallOEWrapper(const std::string& ID, bool disable)
+{
+  char cmd[255];
+  snprintf(cmd, sizeof(cmd), "/usr/lib/libreelec/systemd-addon-wrapper %s %d", ID.c_str(), disable);
+  system(cmd);
+}
+
 void OnEnabled(const std::string& id)
 {
   // If the addon is a special, call enabled handler
@@ -356,6 +363,11 @@ void OnEnabled(const std::string& id)
       CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_ADSPDLL))
     return addon->OnEnabled();
 
+  // OE: systemctl enable & start on addon enable
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
+    CallOEWrapper(addon->ID(), false);
+  // OE
+
   if (CAddonMgr::GetInstance().ServicesHasStarted())
   {
     if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
@@ -372,6 +384,11 @@ void OnDisabled(const std::string& id)
     if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
       std::static_pointer_cast<CService>(addon)->Stop();
   }
+
+  // OE: systemctl stop & disable on addon disable
+  if (CAddonMgr::GetInstance().GetAddon(id, addon, ADDON_SERVICE))
+    CallOEWrapper(addon->ID(), true);
+  // OE
 }
 
 void OnPreInstall(const AddonPtr& addon)
@@ -401,6 +418,15 @@ void OnPreInstall(const AddonPtr& addon)
 void OnPostInstall(const AddonPtr& addon, bool update, bool modal)
 {
   AddonPtr localAddon;
+
+  // OE: systemctl stop & disable / enable & start on addon upgrade
+  if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
+  {
+    CallOEWrapper(addon->ID(), true);
+    CallOEWrapper(addon->ID(), false);
+  }
+  // OE
+
   if (CAddonMgr::GetInstance().ServicesHasStarted())
   {
     if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
@@ -439,6 +465,11 @@ void OnPreUnInstall(const AddonPtr& addon)
 {
   AddonPtr localAddon;
 
+  // OE: systemctl stop & disable on addon uninstall
+  if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
+    CallOEWrapper(addon->ID(), true);
+  // OE
+
   if (CAddonMgr::GetInstance().ServicesHasStarted())
   {
     if (CAddonMgr::GetInstance().GetAddon(addon->ID(), localAddon, ADDON_SERVICE))
diff --git a/xbmc/addons/Addon.h b/xbmc/addons/Addon.h
index 515afe1..36287d6 100644
--- a/xbmc/addons/Addon.h
+++ b/xbmc/addons/Addon.h
@@ -121,6 +121,8 @@ public:
   const InfoMap& ExtraInfo() const override { return m_props.extrainfo; }
   const ADDONDEPS& GetDeps() const override { return m_props.dependencies; }
 
+  void CallOEWrapper(const std::string& ID, bool disable);
+
   /*! \brief Check whether the this addon can be configured or not
    \return true if the addon has settings, false otherwise
    \sa LoadSettings, LoadUserSettings, SaveSettings, HasUserSettings, GetSetting, UpdateSetting
