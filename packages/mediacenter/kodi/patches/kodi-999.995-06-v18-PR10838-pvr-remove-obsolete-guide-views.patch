diff --git a/xbmc/pvr/windows/GUIWindowPVRBase.cpp b/xbmc/pvr/windows/GUIWindowPVRBase.cpp
index a0943c1..8dcbe20 100644
--- a/xbmc/pvr/windows/GUIWindowPVRBase.cpp
+++ b/xbmc/pvr/windows/GUIWindowPVRBase.cpp
@@ -899,8 +899,7 @@ bool CGUIWindowPVRBase::ActionInputChannelNumber(int input)
            ((*it)->HasEPGInfoTag() && (*it)->GetEPGInfoTag()->HasPVRChannel() && (*it)->GetEPGInfoTag()->PVRChannelNumber() == iChannelNumber))
         {
           // different handling for guide grid
-          if ((GetID() == WINDOW_TV_GUIDE || GetID() == WINDOW_RADIO_GUIDE) &&
-              m_viewControl.GetCurrentControl() == GUIDE_VIEW_TIMELINE)
+          if (GetID() == WINDOW_TV_GUIDE || GetID() == WINDOW_RADIO_GUIDE)
           {
             CGUIEPGGridContainer* epgGridContainer = (CGUIEPGGridContainer*) GetControl(m_viewControl.GetCurrentControl());
             if ((*it)->HasEPGInfoTag() && (*it)->GetEPGInfoTag()->HasPVRChannel())
diff --git a/xbmc/pvr/windows/GUIWindowPVRBase.h b/xbmc/pvr/windows/GUIWindowPVRBase.h
index 1ee4988..6175fd7 100644
--- a/xbmc/pvr/windows/GUIWindowPVRBase.h
+++ b/xbmc/pvr/windows/GUIWindowPVRBase.h
@@ -39,14 +39,6 @@ class CGUIDialogProgressBarHandle;
 
 namespace PVR
 {
-  enum EpgGuideView
-  {
-    GUIDE_VIEW_TIMELINE = 10,
-    GUIDE_VIEW_NOW      = 11,
-    GUIDE_VIEW_NEXT     = 12,
-    GUIDE_VIEW_CHANNEL  = 13
-  };
-
   enum EPGSelectAction
   {
     EPG_SELECT_ACTION_CONTEXT_MENU   = 0,
diff --git a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
index 93e875c..5a10301 100644
--- a/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
+++ b/xbmc/pvr/windows/GUIWindowPVRGuide.cpp
@@ -118,7 +118,6 @@ void CGUIWindowPVRGuide::StopRefreshTimelineItemsThread()
 void CGUIWindowPVRGuide::Notify(const Observable &obs, const ObservableMessage msg)
 {
   if (IsActive() &&
-      m_viewControl.GetCurrentControl() == GUIDE_VIEW_TIMELINE &&
       (msg == ObservableMessageEpg ||
        msg == ObservableMessageEpgContainer ||
        msg == ObservableMessageChannelGroupReset ||
@@ -189,12 +188,10 @@ void CGUIWindowPVRGuide::GetContextButtons(int itemNumber, CContextButtons &butt
       buttons.Add(CONTEXT_BUTTON_PLAY_OTHER, 19687);      /* Play recording */
   }
 
-  if (m_viewControl.GetCurrentControl() == GUIDE_VIEW_TIMELINE)
-  {
-    buttons.Add(CONTEXT_BUTTON_BEGIN, 19063);           /* Go to begin */
-    buttons.Add(CONTEXT_BUTTON_NOW, 19070);             /* Go to now */
-    buttons.Add(CONTEXT_BUTTON_END, 19064);             /* Go to end */
-  }
+
+  buttons.Add(CONTEXT_BUTTON_BEGIN, 19063); /* Go to begin */
+  buttons.Add(CONTEXT_BUTTON_NOW, 19070); /* Go to now */
+  buttons.Add(CONTEXT_BUTTON_END, 19064); /* Go to end */
 
   if (epg)
   {
@@ -208,69 +205,56 @@ void CGUIWindowPVRGuide::GetContextButtons(int itemNumber, CContextButtons &butt
 
 void CGUIWindowPVRGuide::UpdateSelectedItemPath()
 {
-  if (m_viewControl.GetCurrentControl() == GUIDE_VIEW_TIMELINE)
+  CGUIEPGGridContainer *epgGridContainer = (CGUIEPGGridContainer*) GetControl(m_viewControl.GetCurrentControl());
+  if (epgGridContainer)
   {
-    CGUIEPGGridContainer *epgGridContainer = (CGUIEPGGridContainer*) GetControl(m_viewControl.GetCurrentControl());
-    if (epgGridContainer)
-    {
-      CPVRChannelPtr channel(epgGridContainer->GetSelectedChannel());
-      if (channel)
-        SetSelectedItemPath(m_bRadio, channel->Path());
-    }
+    CPVRChannelPtr channel(epgGridContainer->GetSelectedChannel());
+    if (channel)
+      SetSelectedItemPath(m_bRadio, channel->Path());
   }
-  else
-    CGUIWindowPVRBase::UpdateSelectedItemPath();
 }
 
 void CGUIWindowPVRGuide::UpdateButtons(void)
 {
   CGUIWindowPVRBase::UpdateButtons();
-  switch (m_viewControl.GetCurrentControl())
-  {
-    case GUIDE_VIEW_TIMELINE: {
-      SET_CONTROL_LABEL(CONTROL_LABEL_HEADER1, g_localizeStrings.Get(19032));
-      break;
-    }
-    case GUIDE_VIEW_NOW: {
-      SET_CONTROL_LABEL(CONTROL_LABEL_HEADER1, g_localizeStrings.Get(19030));
-      break;
-    }
-    case GUIDE_VIEW_NEXT: {
-      SET_CONTROL_LABEL(CONTROL_LABEL_HEADER1, g_localizeStrings.Get(19031));
-      break;
-    }
-    case GUIDE_VIEW_CHANNEL: {
-      CPVRChannelPtr currentChannel(g_PVRManager.GetCurrentChannel());
-      if (currentChannel)
-        SET_CONTROL_LABEL(CONTROL_LABEL_HEADER1, currentChannel->ChannelName().c_str());
-      break;
-    }
-    default:
-      break;
-  }
-
+  SET_CONTROL_LABEL(CONTROL_LABEL_HEADER1, g_localizeStrings.Get(19032));
   SET_CONTROL_LABEL(CONTROL_LABEL_HEADER2, GetChannelGroup()->GroupName());
 }
 
 bool CGUIWindowPVRGuide::GetDirectory(const std::string &strDirectory, CFileItemList &items)
 {
-  switch (m_viewControl.GetCurrentControl())
+  bool bRefresh = false;
+
   {
-    case GUIDE_VIEW_TIMELINE:
-      GetViewTimelineItems(items);
-      break;
-    case GUIDE_VIEW_NOW:
-      GetViewNowItems(items);
-      break;
-    case GUIDE_VIEW_NEXT:
-      GetViewNextItems(items);
-      break;
-    case GUIDE_VIEW_CHANNEL:
-      GetViewChannelItems(items);
-      break;
-    default:
-      CLog::Log(LOGERROR, "CGUIWindowPVRGuide - %s - Unknown view control. Unable to fill item list.", __FUNCTION__);
-      break;
+    CSingleLock lock(m_critSection);
+
+    // group change detected reset grid coordinates and refresh grid items
+    if (!m_bRefreshTimelineItems && *m_cachedChannelGroup != *GetChannelGroup())
+    {
+      CGUIEPGGridContainer* epgGridContainer = GetGridControl();
+      if (!epgGridContainer)
+        return true;
+
+      epgGridContainer->ResetCoordinates();
+      m_bRefreshTimelineItems = true;
+      bRefresh = true;
+    }
+  }
+
+  // never call RefreshTimelineItems with locked mutex!
+  if (bRefresh)
+    RefreshTimelineItems();
+
+  {
+    CSingleLock lock(m_critSection);
+
+    // Note: no need to do anything if no new data available. items always contains previous data.
+    if (m_newTimeline)
+    {
+      items.RemoveDiscCache(GetID());
+      items.Assign(*m_newTimeline, false);
+      m_newTimeline.reset();
+    }
   }
 
   return true;
@@ -289,9 +273,7 @@ bool CGUIWindowPVRGuide::OnAction(const CAction &action)
     case REMOTE_7:
     case REMOTE_8:
     case REMOTE_9:
-      if (m_viewControl.GetCurrentControl() != GUIDE_VIEW_CHANNEL)
-        return ActionInputChannelNumber(action.GetID() - REMOTE_0);
-      break;
+      return ActionInputChannelNumber(action.GetID() - REMOTE_0);
   }
 
   return CGUIWindowPVRBase::OnAction(action);
@@ -428,13 +410,6 @@ bool CGUIWindowPVRGuide::OnMessage(CGUIMessage& message)
           SetInvalid();
           break;
         }
-        case ObservableMessageEpgActiveItem:
-        {
-          if (m_viewControl.GetCurrentControl() != GUIDE_VIEW_TIMELINE)
-            SetInvalid();
-
-          break;
-        }
       }
       break;
   }
@@ -462,50 +437,6 @@ bool CGUIWindowPVRGuide::OnContextButton(int itemNumber, CONTEXT_BUTTON button)
       CGUIWindowPVRBase::OnContextButton(itemNumber, button);
 }
 
-void CGUIWindowPVRGuide::GetViewChannelItems(CFileItemList &items)
-{
-  CPVRChannelPtr currentChannel(g_PVRManager.GetCurrentChannel());
-  items.Clear();
-  if (!currentChannel || g_PVRManager.GetCurrentEpg(items) == 0)
-  {
-    CFileItemPtr item;
-    item.reset(new CFileItem("pvr://guide/channel/empty.epg", false));
-    item->SetLabel(g_localizeStrings.Get(19028));
-    item->SetLabelPreformated(true);
-    items.Add(item);
-  }
-}
-
-void CGUIWindowPVRGuide::GetViewNowItems(CFileItemList &items)
-{
-  items.Clear();
-  int iEpgItems = GetChannelGroup()->GetEPGNow(items);
-
-  if (iEpgItems == 0)
-  {
-    CFileItemPtr item;
-    item.reset(new CFileItem("pvr://guide/now/empty.epg", false));
-    item->SetLabel(g_localizeStrings.Get(19028));
-    item->SetLabelPreformated(true);
-    items.Add(item);
-  }
-}
-
-void CGUIWindowPVRGuide::GetViewNextItems(CFileItemList &items)
-{
-  items.Clear();
-  int iEpgItems = GetChannelGroup()->GetEPGNext(items);
-
-  if (iEpgItems)
-  {
-    CFileItemPtr item;
-    item.reset(new CFileItem("pvr://guide/next/empty.epg", false));
-    item->SetLabel(g_localizeStrings.Get(19028));
-    item->SetLabelPreformated(true);
-    items.Add(item);
-  }
-}
-
 bool CGUIWindowPVRGuide::RefreshTimelineItems()
 {
   if (m_bRefreshTimelineItems)
@@ -554,43 +485,6 @@ bool CGUIWindowPVRGuide::RefreshTimelineItems()
   return false;
 }
 
-void CGUIWindowPVRGuide::GetViewTimelineItems(CFileItemList &items)
-{
-  bool bRefresh = false;
-
-  {
-    CSingleLock lock(m_critSection);
-
-    // group change detected reset grid coordinates and refresh grid items
-    if (!m_bRefreshTimelineItems && *m_cachedChannelGroup != *GetChannelGroup())
-    {
-      CGUIEPGGridContainer* epgGridContainer = GetGridControl();
-      if (!epgGridContainer)
-        return;
-
-      epgGridContainer->ResetCoordinates();
-      m_bRefreshTimelineItems = true;
-      bRefresh = true;
-    }
-  }
-
-  // never call RefreshTimelineItems with locked mutex!
-  if (bRefresh)
-    RefreshTimelineItems();
-
-  {
-    CSingleLock lock(m_critSection);
-
-    // Note: no need to do anything if no new data available. items always contains previous data.
-    if (m_newTimeline)
-    {
-      items.RemoveDiscCache(GetID());
-      items.Assign(*m_newTimeline, false);
-      m_newTimeline.reset();
-    }
-  }
-}
-
 bool CGUIWindowPVRGuide::OnContextButtonBegin(CFileItem *item, CONTEXT_BUTTON button)
 {
   bool bReturn = false;
diff --git a/xbmc/pvr/windows/GUIWindowPVRGuide.h b/xbmc/pvr/windows/GUIWindowPVRGuide.h
index d5a41fc..a957f15 100644
--- a/xbmc/pvr/windows/GUIWindowPVRGuide.h
+++ b/xbmc/pvr/windows/GUIWindowPVRGuide.h
@@ -76,11 +76,6 @@ namespace PVR
     bool OnContextButtonStopRecord(CFileItem *item, CONTEXT_BUTTON button);
     bool OnContextButtonDeleteTimer(CFileItem *item, CONTEXT_BUTTON button);
 
-    void GetViewChannelItems(CFileItemList &items);
-    void GetViewNowItems(CFileItemList &items);
-    void GetViewNextItems(CFileItemList &items);
-    void GetViewTimelineItems(CFileItemList &items);
-
     void StartRefreshTimelineItemsThread();
     void StopRefreshTimelineItemsThread();
 
diff --git a/xbmc/settings/Settings.cpp b/xbmc/settings/Settings.cpp
index 9940b6a..1a17965 100644
--- a/xbmc/settings/Settings.cpp
+++ b/xbmc/settings/Settings.cpp
@@ -565,7 +565,6 @@ void CSettings::Uninitialize()
   m_settingsManager->UnregisterSettingOptionsFiller("audiodevicespassthrough");
   m_settingsManager->UnregisterSettingOptionsFiller("audiostreamsilence");
   m_settingsManager->UnregisterSettingOptionsFiller("charsets");
-  m_settingsManager->UnregisterSettingOptionsFiller("epgguideviews");
   m_settingsManager->UnregisterSettingOptionsFiller("fontheights");
   m_settingsManager->UnregisterSettingOptionsFiller("fonts");
   m_settingsManager->UnregisterSettingOptionsFiller("languagenames");
