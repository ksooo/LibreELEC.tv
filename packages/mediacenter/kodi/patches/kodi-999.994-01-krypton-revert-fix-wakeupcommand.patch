diff --git a/xbmc/pvr/PVRManager.cpp b/xbmc/pvr/PVRManager.cpp
index 52a8e1b..70214f2 100644
--- a/xbmc/pvr/PVRManager.cpp
+++ b/xbmc/pvr/PVRManager.cpp
@@ -163,9 +163,7 @@ CPVRManager::CPVRManager(void) :
     m_progressBar(nullptr),
     m_progressHandle(nullptr),
     m_managerState(ManagerStateStopped),
-    m_isChannelPreview(false),
-    m_bSettingPowerManagementEnabled(CSettings::GetInstance().GetBool(CSettings::SETTING_PVRPOWERMANAGEMENT_ENABLED)),
-    m_strSettingWakeupCommand(CSettings::GetInstance().GetString(CSettings::SETTING_PVRPOWERMANAGEMENT_SETWAKEUPCMD))
+    m_isChannelPreview(false)
 {
   CAnnouncementManager::GetInstance().AddAnnouncer(this);
 }
@@ -271,16 +269,6 @@ void CPVRManager::OnSettingChanged(const CSetting *setting)
   {
     m_addons->SetEPGTimeFrame(static_cast<const CSettingInt*>(setting)->GetValue());
   }
-  else if(settingId == CSettings::SETTING_PVRPOWERMANAGEMENT_ENABLED)
-  {
-    CSingleLock lock(m_critSection);
-    m_bSettingPowerManagementEnabled = static_cast<const CSettingBool*>(setting)->GetValue();
-  }
-  else if(settingId == CSettings::SETTING_PVRPOWERMANAGEMENT_SETWAKEUPCMD)
-  {
-    CSingleLock lock(m_critSection);
-    m_strSettingWakeupCommand = static_cast<const CSettingString*>(setting)->GetValue();
-  }
 }
 
 void CPVRManager::OnSettingAction(const CSetting *setting)
@@ -388,9 +376,6 @@ void CPVRManager::Init()
   settingSet.insert(CSettings::SETTING_EPG_RESETEPG);
   settingSet.insert(CSettings::SETTING_EPG_DAYSTODISPLAY);
   settingSet.insert(CSettings::SETTING_PVRPARENTAL_ENABLED);
-  settingSet.insert(CSettings::SETTING_PVRPOWERMANAGEMENT_ENABLED);
-  settingSet.insert(CSettings::SETTING_PVRPOWERMANAGEMENT_SETWAKEUPCMD);
-
   CSettings::GetInstance().RegisterCallback(this, settingSet);
 
   // Note: we're holding the progress bar dialog instance pointer in a member because it is needed by pvr core
@@ -630,19 +615,11 @@ void CPVRManager::Process(void)
 
 bool CPVRManager::SetWakeupCommand(void)
 {
-  bool bSettingPowerManagementEnabled;
-  std::string strSettingWakeupCommand;
-
-  {
-    CSingleLock lock(m_critSection);
-    bSettingPowerManagementEnabled = m_bSettingPowerManagementEnabled;
-    strSettingWakeupCommand = m_strSettingWakeupCommand;
-  }
-
-  if (!bSettingPowerManagementEnabled)
+  if (!CSettings::GetInstance().GetBool(CSettings::SETTING_PVRPOWERMANAGEMENT_ENABLED))
     return false;
 
-  if (!strSettingWakeupCommand.empty() && m_timers)
+  const std::string strWakeupCommand = CSettings::GetInstance().GetString(CSettings::SETTING_PVRPOWERMANAGEMENT_SETWAKEUPCMD);
+  if (!strWakeupCommand.empty() && m_timers)
   {
     time_t iWakeupTime;
     const CDateTime nextEvent = m_timers->GetNextEventTime();
@@ -650,7 +627,7 @@ bool CPVRManager::SetWakeupCommand(void)
     {
       nextEvent.GetAsTime(iWakeupTime);
 
-      std::string strExecCommand = StringUtils::Format("%s %ld", strSettingWakeupCommand.c_str(), iWakeupTime);
+      std::string strExecCommand = StringUtils::Format("%s %ld", strWakeupCommand.c_str(), iWakeupTime);
 
       const int iReturn = system(strExecCommand.c_str());
       if (iReturn != 0)
diff --git a/xbmc/pvr/PVRManager.h b/xbmc/pvr/PVRManager.h
index 032c4ae..f8c0f9a 100644
--- a/xbmc/pvr/PVRManager.h
+++ b/xbmc/pvr/PVRManager.h
@@ -719,10 +719,6 @@ private:
 
     std::atomic_bool m_isChannelPreview;
     CEventSource<PVREvent> m_events;
-
-    // settings cache
-    bool m_bSettingPowerManagementEnabled; // SETTING_PVRPOWERMANAGEMENT_ENABLED
-    std::string m_strSettingWakeupCommand; // SETTING_PVRPOWERMANAGEMENT_SETWAKEUPCMD
   };
 
   class CPVRStartupJob : public CJob
